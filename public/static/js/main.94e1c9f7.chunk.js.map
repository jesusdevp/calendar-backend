{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/calendar/CalendarEvent.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","router/AuthRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","CalendarEvent","title","name","Navbar","useDispatch","useSelector","state","auth","className","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusHour","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","utils","DateFnsUtils","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","id","resp","json","ok","msg","console","log","getState","uid","evento","_id","eventStartAddNew","inputVariant","ampm","label","onChange","format","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccesor","endAccesor","onSelectEvent","onSelectSlot","selectable","onDoubleClickEvent","onView","setItem","view","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","useForm","initialState","values","setValues","reset","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","email","password","Date","getTime","to","RegisterScreen","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","AuthRouter","exact","path","component","PrivateRoute","isAuthticated","Component","rest","props","PublicRoute","AppRouter","checking","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94e1c9f7.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n\r\n  if (method === \"GET\") {\r\n    return fetch(url);\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n  if (method === \"GET\") {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"x-token\": token,\r\n      },\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"x-token\": token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","export const types = {\r\n  uiOpenModal: \"[ui] Open modal\",\r\n  uiCloseModal: \"[ui] Close modal\",\r\n\r\n  eventStartAddNew: \"[event] Event add new\",\r\n  eventLogout: \"[event] Logout event clean\",\r\n  eventSetActive: \"[event] Set Active\",\r\n  eventAddNew: \"[event] Add new\",\r\n  eventClearActiveEvent: \"[event] Clear active event\",\r\n  eventUpdated: \"[event] Event updated\",\r\n  eventDeleted: \"[event] Event deleteted\",\r\n  eventLoaded: \"[event] Events loaded \",\r\n\r\n  authChecking: \"[auth] Checking login state\",\r\n  authCheckingFinish: \"[auth] Finish Checking login state\",\r\n  authStartLogin: \"[auth] Start login\",\r\n  authLogin: \"[auth] Login\",\r\n  authRegister: \"[auth Register]\",\r\n  authStartRegister: \"[auth] Start Register\",\r\n  authStartTokenRenew: \"[auth] Start token renew\",\r\n  authLogout: \"[auth] Start token renew\",\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n  return events.map((e) => ({\r\n    ...e,\r\n    end: moment(e.end).toDate(),\r\n    start: moment(e.start).toDate(),\r\n  }));\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid, name } = getState().auth;\r\n\r\n    try {\r\n      const resp = await fetchConToken(\"events\", event, \"POST\");\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        event.id = body.evento.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name: name,\r\n        };\r\n\r\n        dispatch(eventAddNew(event));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n  type: types.eventClearActiveEvent,\r\n});\r\n\r\nexport const eventstartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        dispatch(eventUpdated(event));\r\n      } else {\r\n        Swal.fire(\"Error\", body.msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event,\r\n});\r\n\r\nexport const startEventDeleted = () => {\r\n  return async (dispatch, getState) => {\r\n    const { id } = getState().calendar.activeEvent;\r\n\r\n    try {\r\n      const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\r\n      const body = await resp.json();\r\n\r\n      if (body.ok) {\r\n        dispatch(eventDeleted());\r\n      } else {\r\n        Swal.fire(\"Error\", body.msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n  type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken(\"events\");\r\n      const body = await resp.json();\r\n      const events = prepareEvents(body.events);\r\n\r\n      dispatch(eventLoaded(events));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n  type: types.eventLoaded,\r\n  payload: events,\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n  type: types.eventLogout,\r\n});\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\r\n      \"auth/register\",\r\n      { email, password, name },\r\n      \"POST\"\r\n    );\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchConToken(\"auth/renew\");\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(checkingFinish());\r\n    }\r\n  };\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n  type: types.authCheckingFinish,\r\n});\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(eventLogout());\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n","import React from \"react\";\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n  const { title, user } = event;\r\n\r\n  return (\r\n    <div>\r\n      <strong> {title} </strong>\r\n      <span> {user.name} </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">Hola: {name}</span>\r\n\r\n      <button onClick={handleLogout} className=\"btn btn-outline-danger\">\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Logout</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const messages = {\r\n  allDay: \"Todo el día\",\r\n  previous: \"<\",\r\n  next: \">\",\r\n  today: \"Hoy\",\r\n  month: \"Mes\",\r\n  week: \"Semana\",\r\n  day: \"Día\",\r\n  agenda: \"Agenda\",\r\n  date: \"Fecha\",\r\n  time: \"Hora\",\r\n  event: \"Evento\",\r\n  noEventsInRange: \"No hay eventos en este rango\",\r\n  showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n  type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n  type: types.uiCloseModal,\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport Modal from \"react-modal\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDateTimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Swal from \"sweetalert2\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventStartAddNew,\r\n  eventstartUpdate,\r\n} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst now = moment()\r\n  .minutes(0)\r\n  .seconds(0)\r\n  .add(1, \"hours\");\r\n\r\nconst nowPlusHour = now.clone().add(1, \"hours\");\r\n\r\nconst initEvent = {\r\n  title: \"\",\r\n  notes: \"\",\r\n  start: now.toDate(),\r\n  end: nowPlusHour.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n  const { modalOpen } = useSelector((state) => state.ui);\r\n  const { activeEvent } = useSelector((state) => state.calendar);\r\n  const dispatch = useDispatch();\r\n\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlusHour.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { notes, title, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e,\r\n    });\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e,\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        \"La fecha fin debe de ser mayor a la fecha de inicio\",\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n\r\n    if (activeEvent) {\r\n      dispatch(eventstartUpdate(formValues));\r\n    } else {\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Modal\r\n        isOpen={modalOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n      >\r\n        <h1> {activeEvent ? \"Editar evento\" : \"Nuevo evento\"} </h1>\r\n        <hr />\r\n        <form className=\"container\" onSubmit={handleSubmitForm}>\r\n          <div className=\"form-group \">\r\n            <KeyboardDateTimePicker\r\n              inputVariant=\"outlined\"\r\n              ampm={false}\r\n              label=\"Fecha y hora inicio\"\r\n              value={dateStart}\r\n              onChange={handleStartDateChange}\r\n              format=\"MMMM dd yyyy, HH:mm \"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <KeyboardDateTimePicker\r\n              inputVariant=\"outlined\"\r\n              ampm={false}\r\n              label=\"Fecha y hora fin\"\r\n              value={dateEnd}\r\n              onChange={handleEndDateChange}\r\n              minDate={dateStart}\r\n              format=\"MMMM dd yyyy, HH:mm \"\r\n            />\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"form-group\">\r\n            <label>Titulo y notas</label>\r\n            <input\r\n              type=\"text\"\r\n              className={`form-control ${!titleValid && \"is-invalid\"} `}\r\n              placeholder=\"Título del evento\"\r\n              name=\"title\"\r\n              autoComplete=\"off\"\r\n              value={title}\r\n              onChange={handleInputChange}\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              Una descripción corta\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Notas\"\r\n              rows=\"5\"\r\n              name=\"notes\"\r\n              value={notes}\r\n              onChange={handleInputChange}\r\n            ></textarea>\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              Información adicional\r\n            </small>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n            <i className=\"far fa-save\"></i>\r\n            <span> {activeEvent ? \"Editar evento\" : \"Guardar evento\"} </span>\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { eventClearActiveEvent } from \"../../actions/events\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickNew = () => {\r\n    dispatch(uiOpenModal());\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startEventDeleted } from \"../../actions/events\";\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startEventDeleted());\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n      <i className=\"fas fa-trash\"> Borrar evento</i>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport { CalendarEvent } from \"./CalendarEvent\";\r\nimport moment from \"moment\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"moment/locale/es\";\r\nimport { CalendarModal } from \"./CalendarModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventSetActive,\r\n  eventStartLoading,\r\n} from \"../../actions/events\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { events, activeEvent } = useSelector((state) => state.calendar);\r\n\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  const [lastView, setLastView] = useState(\r\n    localStorage.getItem(\"lastView\") || \"month\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading());\r\n  }, [dispatch]);\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  };\r\n\r\n  const onViewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem(\"lastView\", e);\r\n  };\r\n\r\n  const eventStylesGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: uid === event.user._id ? \"#367cf7\" : \"#465660\",\r\n      borderRadius: \"0px\",\r\n      opacity: 0.8,\r\n      display: \"block\",\r\n      color: \"white\",\r\n    };\r\n\r\n    return { style };\r\n  };\r\n\r\n  const onSelectSlot = () => {\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-calendar\">\r\n      <Navbar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccesor=\"start\"\r\n        endAccesor=\"end\"\r\n        messages={messages}\r\n        onSelectEvent={onSelectEvent}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onView={onViewChange}\r\n        view={lastView}\r\n        eventPropGetter={eventStylesGetter}\r\n        components={{\r\n          event: CalendarEvent,\r\n        }}\r\n      />\r\n\r\n      <AddNewFab />\r\n\r\n      {activeEvent && <DeleteEventFab />}\r\n\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startLogin } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./Login.css\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: \"jesus@gmail.com\",\r\n    lPassword: \"123456\",\r\n  });\r\n\r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"col-md-6 login-form-1\">\r\n        <h3>Sign in</h3>\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Email\"\r\n              name=\"lEmail\"\r\n              value={lEmail}\r\n              onChange={handleLoginInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              name=\"lPassword\"\r\n              value={lPassword}\r\n              onChange={handleLoginInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group btn-container\">\r\n            <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n          </div>\r\n          <Link to=\"/auth/register\">\r\n            <p>Create Account</p>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./Register.css\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: \"Jesus\",\r\n    rEmail: \"jesus@gmail.com\",\r\n    rPassword1: \"123456\",\r\n    rPassword2: \"123456\",\r\n  });\r\n\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (rPassword1 !== rPassword2) {\r\n      return Swal.fire(\r\n        \"Error\",\r\n        \"Las contraseñas deben de ser iguales\",\r\n        \"error\"\r\n      );\r\n    }\r\n\r\n    dispatch(startRegister(rEmail, rPassword1, rName));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container register-container\">\r\n      <div className=\"col-md-6 register-form\">\r\n        <h3>Sign up</h3>\r\n        <form onSubmit={handleRegister}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              name=\"rName\"\r\n              value={rName}\r\n              onChange={handleRegisterInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Email\"\r\n              name=\"rEmail\"\r\n              value={rEmail}\r\n              onChange={handleRegisterInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Contraseña\"\r\n              name=\"rPassword1\"\r\n              value={rPassword1}\r\n              onChange={handleRegisterInputChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Repeat Password\"\r\n              name=\"rPassword2\"\r\n              value={rPassword2}\r\n              onChange={handleRegisterInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group btn-container\">\r\n            <input type=\"submit\" className=\"btnSubmit\" value=\"Create Account\" />\r\n          </div>\r\n          <Link to=\"/auth/login\">\r\n            <p className=\"signup\">Sign in</p>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n        <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n        <Redirect to=\"/auth/login\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        component={(props) =>\r\n          isAuthticated ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect to=\"/auth/login\" />\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        component={(props) =>\r\n          isAuthticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return <h5>Espere...</h5>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n            isAuthticated={!!uid}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={CalendarScreen}\r\n            isAuthticated={!!uid}\r\n          />\r\n        </Switch>\r\n\r\n        <Redirect to=\"/\" />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//   id: new Date().getTime(),\r\n//   title: \"Cumpleaños del jefe\",\r\n//   start: moment().toDate(), // New date\r\n//   end: moment()\r\n//     .add(2, \"hours\")\r\n//     .toDate(),\r\n//   bgcolor: \"#fafafa\",\r\n//   notes: \"Comprar cerveza\",\r\n//   user: {\r\n//     _id: \"123\",\r\n//     name: \"Jesus\",\r\n//   },\r\n// },\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload,\r\n      };\r\n\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      };\r\n\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null,\r\n      };\r\n\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) =>\r\n          event.id === action.payload.id ? action.payload : event\r\n        ),\r\n      };\r\n\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          (event) => event.id !== state.activeEvent.id\r\n        ),\r\n        activeEvent: null,\r\n      };\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload],\r\n      };\r\n\r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true,\r\n      };\r\n\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  checking: true,\r\n  uid: null,\r\n  name: null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false,\r\n      };\r\n\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n\r\n    case types.authLogout:\r\n      return {\r\n        checking: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from \"./router/AppRouter\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport \"./styles.css\";\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}